generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  name     String @unique
  password String
  avatar   String @default("no-avatar.webp")

  lists    List[]
  comments Comment[]
}

model List {
  id String @id @default(cuid())

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String  @map("user_id")
  name      String
  isPublic  Boolean @default(false)
  isEditing Boolean @default(true)

  animes Anime[]
}

model Anime {
  id String @id @default(cuid())

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  anilibriaSlug String @map("anilibria_slug")

  listId String @map("list_id")
  lists  List   @relation(fields: [listId], references: [id], onDelete: Cascade)
}

model Comment {
  id String @id @default(cuid())

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  content String

  anilibriaSlug String @map("anilibria_slug")

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @map("user_id")
}
